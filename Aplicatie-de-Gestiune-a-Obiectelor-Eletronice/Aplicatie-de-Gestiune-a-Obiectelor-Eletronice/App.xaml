<Application x:Class="Aplicatie_de_Gestiune_a_Obiectelor_Eletronice.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Aplicatie_de_Gestiune_a_Obiectelor_Eletronice"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:viewModel="clr-namespace:Aplicatie_de_Gestiune_a_Obiectelor_Eletronice.ViewModels"
             xmlns:view="clr-namespace:Aplicatie_de_Gestiune_a_Obiectelor_Eletronice.View.Pages"
             xmlns:services="clr-namespace:Aplicatie_de_Gestiune_a_Obiectelor_Eletronice.Services"
             xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
             >
    <Application.Resources>

        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ui:ThemesDictionary Theme="Light" />
                <ui:ControlsDictionary />
            </ResourceDictionary.MergedDictionaries>

            <Color x:Key="BackgroundColor" A="255" R="174" G="184" B="194"/>
            <sys:Double x:Key="PageWidth">1640</sys:Double>
            <sys:Double x:Key="PageHeight">940</sys:Double>
            <sys:Double x:Key="MenuStackPanelWidht">300</sys:Double>
            <sys:Double x:Key="MenuButtonHeight">100</sys:Double>
 

            <DataTemplate DataType="{x:Type TypeName=viewModel:MenuViewModel}">
                <view:Menu/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type TypeName=viewModel:ElectronicListViewModel}">
                <view:EletronicsList/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type TypeName=viewModel:ElectronicOverviewViewModel}">
                <view:ElectronicOverview/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type TypeName=viewModel:FormViewModel}">
                <view:Form/>
            </DataTemplate>

            <Style TargetType="TextBox" x:Key="RoundTBox">
                <Style.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="5" />
                    </Style>
                </Style.Resources>
            </Style>

            <Style TargetType="DatePicker" x:Key="RoundDatePicker">
                <Style.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="5" />
                    </Style>
                </Style.Resources>
            </Style>
            
            <Style TargetType="ComboBox" x:Key="RoundComboBox">
                <Style.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="5" />
                    </Style>
                </Style.Resources>
            </Style>

            <Style x:Key="placeHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Grid>
                                <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent" 
                                 Panel.ZIndex="2" />
                                <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource RoundTBox}">
                                            <Setter Property="Foreground" Value="Transparent"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                    <Setter Property="Foreground" Value="LightGray"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="styleCalendar" TargetType="{x:Type Calendar}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Calendar}">
                            <Viewbox Height="300" Width="300">
                                <CalendarItem x:Name="PART_CalendarItem"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"/>
                            </Viewbox>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button" x:Key="RoundButton">
                <Style.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="5" />
                    </Style>
                </Style.Resources>
            </Style>

            <BooleanToVisibilityConverter x:Key="BoolToVis"/>

            <Style x:Key="DefaultDataGridRowStyle" TargetType="{x:Type DataGridRow}">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Opacity="0.0" Color="#89CFF0" />
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                <Setter Property="ValidationErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBlock
                        Margin="2,0,0,0"
                        VerticalAlignment="Center"
                        Foreground="{DynamicResource SystemFillColorCriticalBrush}"
                        Text="!" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridRow}">
                            <Border
                        x:Name="DGR_Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                                <SelectiveScrollingGrid>
                                    <SelectiveScrollingGrid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </SelectiveScrollingGrid.ColumnDefinitions>
                                    <SelectiveScrollingGrid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </SelectiveScrollingGrid.RowDefinitions>
                                    <DataGridCellsPresenter
                                Grid.Column="1"
                                ItemsPanel="{TemplateBinding ItemsPanel}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <DataGridDetailsPresenter
                                Grid.Row="1"
                                Grid.Column="1"
                                SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                Visibility="{TemplateBinding DetailsVisibility}" />
                                    <DataGridRowHeader
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="0"
                                SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                </SelectiveScrollingGrid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />

                                        <!--  Provide a different appearance for every other row.  -->
                                        <VisualState x:Name="Normal_AlternatingRow" />

                                        <VisualState x:Name="Normal_Selected">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Duration="0" To="#5F90A8" />
                                                <DoubleAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" Duration="0" To="0.6" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Unfocused_Selected">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Duration="0" To="#5F90A8" />
                                                <DoubleAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" Duration="0" To="0.6" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Normal_Editing">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Duration="0" To="{DynamicResource SystemAccentColor}" />
                                                <DoubleAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" Duration="0" To="0.6" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="MouseOver_Editing">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Duration="0" To="{DynamicResource SystemAccentColor}" />
                                                <DoubleAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" Duration="0" To="0.8" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="MouseOver_Unfocused_Editing">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Duration="0" To="{DynamicResource SystemAccentColor}" />
                                                <DoubleAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" Duration="0" To="0.8" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Unfocused_Editing">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Duration="0" To="{DynamicResource SystemAccentColor}" />
                                                <DoubleAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" Duration="0" To="0.6" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" Duration="0" To="0.8" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="MouseOver_Selected">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Duration="0" To="{DynamicResource SystemAccentColor}" />
                                                <DoubleAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" Duration="0" To="0.8" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="MouseOver_Unfocused_Selected">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Duration="0" To="{DynamicResource SystemAccentColor}" />
                                                <DoubleAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)" Duration="0" To="0.8" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <DataTemplate DataType="{x:Type sys:String}">
                <TextBlock Text="{Binding}">
                    <TextBlock.Resources>
                        <Style TargetType="{x:Type TextBlock}"/>
                    </TextBlock.Resources>
                </TextBlock>
            </DataTemplate>

        </ResourceDictionary>
    </Application.Resources>
</Application>
    